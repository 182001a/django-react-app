{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hisas\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\django-react-app\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { withCookies } from 'react-cookie';\nimport axios from \"axios\";\nimport './style.scss';\nimport { useAppContext } from '../AppContext';\nimport PostModal from './PostModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({\n  cookies\n}) {\n  _s();\n  const POST_URL = 'http://127.0.0.1:8000/post/';\n  const LIKES_URL = 'http://127.0.0.1:8000/like/';\n  const {\n    user,\n    posts,\n    setPosts,\n    likedPosts,\n    setLikedPosts\n  } = useAppContext();\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const authToken = cookies.get('authToken');\n      if (authToken) {\n        try {\n          const response = await axios.get(POST_URL, {\n            headers: {\n              Authorization: `Token ${authToken}`\n            }\n          });\n          setPosts(response.data);\n        } catch (error) {\n          console.log('error');\n        }\n      }\n    };\n    fetchPosts();\n\n    // いいねした投稿を取得\n    const fetchLikedPosts = async () => {\n      const authToken = cookies.get('authToken');\n      if (authToken) {\n        try {\n          const response = await axios.get(LIKES_URL, {\n            headers: {\n              Authorization: `Token ${authToken}`\n            }\n          });\n          setLikedPosts(response.data);\n        } catch (error) {\n          console.error('Error fetching liked posts:', error);\n        }\n      }\n    };\n    fetchLikedPosts();\n  }, [user, setPosts, setLikedPosts, cookies]);\n  const handleNewPost = async ({\n    content,\n    file\n  }) => {\n    const authToken = cookies.get('authToken');\n    if (authToken) {\n      try {\n        const formData = new FormData();\n        formData.append('content', content);\n        if (file) formData.append('file', file);\n        const response = await axios.post(POST_URL, formData, {\n          headers: {\n            Authorization: `Token ${authToken}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        // 新しい投稿をステートに追加\n        if (response.data && response.status === 201) {\n          // 201は作成成功のステータスコード\n          setPosts(prevPosts => [response.data, ...prevPosts]);\n        }\n        setShowModal(false);\n      } catch (error) {\n        console.log('error');\n      }\n    }\n  };\n\n  // console.log(posts)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => setShowModal(true),\n        children: \"\\u65B0\\u3057\\u3044\\u6295\\u7A3F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(PostModal, {\n        onClose: () => setShowModal(false),\n        onSubmit: handleNewPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"posts\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post__username\",\n            children: post.author.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post__content\",\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), post.file && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.file,\n            alt: \"Post\",\n            className: \"post__image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post__created-at\",\n            children: post.created_at\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-like-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"like\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"like__title\",\n          children: \"\\u3044\\u3044\\u306D\\u3057\\u305F\\u6295\\u7A3F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"like__list\",\n          children: likedPosts.map(like => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"like__content\",\n              children: like.post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"like__file\",\n              children: like.post.file\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, like.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"3mnEa1nPB7Mv6RNONzZxH6PHkY0=\", false, function () {\n  return [useAppContext];\n});\n_c = Home;\nexport default _c2 = withCookies(Home);\nvar _c, _c2;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","withCookies","axios","useAppContext","PostModal","jsxDEV","_jsxDEV","Home","cookies","_s","POST_URL","LIKES_URL","user","posts","setPosts","likedPosts","setLikedPosts","showModal","setShowModal","fetchPosts","authToken","get","response","headers","Authorization","data","error","console","log","fetchLikedPosts","handleNewPost","content","file","formData","FormData","append","post","status","prevPosts","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onSubmit","map","author","username","src","alt","created_at","id","like","Fragment","_c","_c2","$RefreshReg$"],"sources":["C:/Users/hisas/OneDrive/デスクトップ/django-react-app/frontend/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { withCookies } from 'react-cookie';\r\nimport axios from \"axios\"\r\n\r\nimport './style.scss';\r\nimport { useAppContext } from '../AppContext';\r\nimport PostModal from './PostModal';\r\n\r\nfunction Home({ cookies }) {\r\n  const POST_URL = 'http://127.0.0.1:8000/post/'\r\n  const LIKES_URL = 'http://127.0.0.1:8000/like/';\r\n\r\n  const { user, posts, setPosts, likedPosts, setLikedPosts } = useAppContext();\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      const authToken = cookies.get('authToken');\r\n      if (authToken) {\r\n        try {\r\n          const response = await axios.get(POST_URL, {\r\n            headers: { Authorization: `Token ${authToken}` }\r\n          });\r\n          setPosts(response.data);\r\n        } catch (error) {\r\n          console.log('error');\r\n        }\r\n      }\r\n    }\r\n    fetchPosts();\r\n\r\n    // いいねした投稿を取得\r\n    const fetchLikedPosts = async () => {\r\n      const authToken = cookies.get('authToken');\r\n      if (authToken) {\r\n        try {\r\n          const response = await axios.get(LIKES_URL, {\r\n            headers: { Authorization: `Token ${authToken}` }\r\n          });\r\n          setLikedPosts(response.data);\r\n        } catch (error) {\r\n          console.error('Error fetching liked posts:', error);\r\n        }\r\n      }\r\n    };\r\n    fetchLikedPosts();\r\n  }, [user, setPosts, setLikedPosts, cookies])\r\n\r\n  const handleNewPost = async ({ content, file }) => {\r\n    const authToken = cookies.get('authToken');\r\n    if (authToken) {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('content', content);\r\n        if (file) formData.append('file', file);\r\n  \r\n        const response = await axios.post(POST_URL, formData, {\r\n          headers: {\r\n            Authorization: `Token ${authToken}`,\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n  \r\n        // 新しい投稿をステートに追加\r\n        if (response.data && response.status === 201) { // 201は作成成功のステータスコード\r\n          setPosts(prevPosts => [response.data, ...prevPosts]);\r\n        }\r\n  \r\n        setShowModal(false);\r\n      } catch (error) {\r\n        console.log('error');\r\n      }\r\n    }\r\n  };\r\n\r\n  // console.log(posts)\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      \r\n      <div className=\"posts-container\">\r\n        <button className=\"btn\" onClick={() => setShowModal(true)}>新しい投稿</button>\r\n        {showModal && (\r\n          <PostModal onClose={() => setShowModal(false)} onSubmit={handleNewPost} />\r\n        )}\r\n        <ul className=\"posts\">\r\n        {posts.map(post => (\r\n          <li key={post.id}>\r\n            <p className=\"post__username\">{post.author.username}</p>\r\n            <p className=\"post__content\">{post.content}</p>\r\n            {post.file && <img src={post.file} alt=\"Post\" className=\"post__image\" />}\r\n            <p className=\"post__created-at\">{post.created_at}</p>\r\n          </li>\r\n        ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"posts-like-container\">\r\n        <div className=\"like\">\r\n          <p className=\"like__title\">いいねした投稿</p>\r\n          <ul className=\"like__list\">\r\n            {likedPosts.map((like) => (\r\n              <React.Fragment key={like.id}>\r\n                <li className=\"like__content\">{like.post.content}</li>\r\n                <li className=\"like__file\">{like.post.file}</li>\r\n              </React.Fragment>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withCookies(Home);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}